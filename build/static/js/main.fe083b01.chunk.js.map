{"version":3,"sources":["assets/fonts/vcr-osd-mono.woff2","assets/fonts/among-us.woff2","app/reducer.js","utils/transition.js","app/index.js","hooks/useAppContext.js","hooks/useAudio.js","hooks/useLocalStorage.js","hooks/usePrefersReducedMotion.js","utils/socket.js","utils/prerender.js","serviceWorker.js","index.js"],"names":["initialState","username","color","reducer","state","action","type","value","window","localStorage","setItem","JSON","stringify","Error","reflow","node","offsetHeight","Start","lazy","Play","Lobby","Dashboard","Staking","Farming","NotFound","About","AppContext","createContext","fontStyles","VCROSDMono","AmongUs","AppRoutes","location","useLocation","pathname","rel","href","as","crossorigin","Transition","timeout","onEnter","status","fallback","exact","path","component","App","storedUsername","useLocalStorage","storedColor","dispatch","useReducer","prefersReducedMotion","usePrefersReducedMotion","useEffect","transitionConfig","disabled","prerender","console","info","history","scrollRestoration","initiateSocket","disconnectSocket","Provider","useAppContext","useContext","useAudio","url","audio","useRef","Audio","playing","setPlaying","useState","current","play","pause","audioRef","addEventListener","removeEventListener","key","initialValue","storedValue","setStoredValue","item","getItem","parse","error","valueToStore","Function","mediaQuery","matchMedia","reduceMotion","setReduceMotion","matches","handleMediaChange","addListener","removeListener","socket","io","disconnect","subscribeToEvent","event","callback","tries","setTimeout","on","msg","sendEvent","data","emit","navigator","userAgent","Boolean","hostname","match","rootElement","document","getElementById","hasChildNodes","hydrate","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe083b01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vcr-osd-mono.87ccd902.woff2\";","export default __webpack_public_path__ + \"static/media/among-us.c1b6eab0.woff2\";","export const initialState = {\n  username: null,\n  color: 'red',\n};\n\nexport function reducer(state, action) {\n  const { type } = action;\n\n  switch (type) {\n    case 'setUsername': {\n      const username = action.value;\n      window.localStorage.setItem('username', JSON.stringify(username));\n      return { ...state, username };\n    }\n    case 'setColor': {\n      const color = action.value;\n      window.localStorage.setItem('color', JSON.stringify(color));\n      return { ...state, color };\n    }\n    default:\n      throw new Error();\n  }\n}\n","const visibleStatus = ['entering', 'entered'];\n\n/**\n * Is the given TransitionStatus visible?\n */\nexport const isVisible = status => visibleStatus.includes(status);\n\n/**\n * Is the given TransitionStatus hidden?\n */\nexport const isHidden = status => !visibleStatus.includes(status);\n\n/**\n * Forces a reflow to trigger transitions on enter\n */\nexport const reflow = node => node && node.offsetHeight;\n","import { lazy, Suspense, useEffect, createContext, useReducer, Fragment } from 'react';\nimport { BrowserRouter, Switch, Route, useLocation } from 'react-router-dom';\nimport { Transition, config as transitionConfig } from 'react-transition-group';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport VCROSDMono from 'assets/fonts/vcr-osd-mono.woff2';\nimport AmongUs from 'assets/fonts/among-us.woff2';\nimport { useLocalStorage, usePrefersReducedMotion } from 'hooks';\nimport { initialState, reducer } from 'app/reducer';\nimport { reflow } from 'utils/transition';\nimport { initiateSocket, disconnectSocket } from 'utils/socket';\nimport prerender from 'utils/prerender';\nimport './reset.css';\nimport './index.css';\nconst Start = lazy(() => import('pages/Start'));\nconst Play = lazy(() => import('pages/Menu'));\nconst Lobby = lazy(() => import('pages/Lobby'));\nconst Dashboard = lazy(() => import('pages/Dashboard'));\nconst Staking = lazy(() => import('pages/Staking'));\nconst Farming = lazy(() => import('pages/Farming'));\nconst NotFound = lazy(() => import('pages/404'));\nconst About = lazy(() => import('pages/About'));\n\nexport const AppContext = createContext();\n\nconst repoPrompt = `Developed by amongus.finance`;\n\nexport const fontStyles = `\n  @font-face {\n    font-family: \"VCR-OSD-Mono\";\n    src: url(${VCROSDMono}) format(\"woff\");\n    font-display: swap;\n  }\n\n  @font-face {\n    font-family: \"amongus\";\n    src: url(${AmongUs}) format(\"woff2\");\n    font-display: swap;\n  }\n`;\n\nconst App = () => {\n  const [storedUsername] = useLocalStorage('username', null);\n  const [storedColor] = useLocalStorage('color', 'red');\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      transitionConfig.disabled = true;\n    } else {\n      transitionConfig.disabled = false;\n    }\n  }, [prefersReducedMotion]);\n\n  useEffect(() => {\n    if (!prerender) {\n      console.info(`${repoPrompt}\\n\\n`);\n    }\n\n    window.history.scrollRestoration = 'manual';\n  }, []);\n\n  useEffect(() => {\n    initiateSocket();\n\n    return () => {\n      disconnectSocket();\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch({ type: 'setUsername', value: storedUsername });\n  }, [storedUsername]);\n\n  useEffect(() => {\n    dispatch({ type: 'setColor', value: storedColor });\n  }, [storedColor]);\n\n  return (\n    <HelmetProvider>\n      <AppContext.Provider value={{ ...state, dispatch }}>\n        <BrowserRouter>\n          <AppRoutes />\n        </BrowserRouter>\n      </AppContext.Provider>\n    </HelmetProvider>\n  );\n};\n\nconst AppRoutes = () => {\n  const location = useLocation();\n  const { pathname } = location;\n\n  return (\n    <Fragment>\n      <Helmet>\n        <link rel=\"canonical\" href={`https://amongus.finance${pathname}`} />\n        <link rel=\"preload\" href={VCROSDMono} as=\"font\" crossorigin=\"\" />\n        <link rel=\"preload\" href={AmongUs} as=\"font\" crossorigin=\"\" />\n        <style>{fontStyles}</style>\n      </Helmet>\n      <Transition\n        key={pathname}\n        timeout={200}\n        onEnter={reflow}\n      >\n        {status => (\n          <Suspense fallback={<Fragment />}>\n            <Switch location={location}>\n              <Route exact path=\"/\" component={Start} />\n              <Route exact path={['/lobby', '/lobby/:id']} component={Lobby} />\n              <Route exact path=\"/play\" component={Play} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/staking\" component={Staking} />\n              <Route exact path=\"/farming\" component={Farming} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </Suspense>\n        )}\n      </Transition>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { useContext } from 'react';\nimport { AppContext } from 'app';\n\nfunction useAppContext() {\n  return useContext(AppContext);\n}\n\nexport default useAppContext;\n","import { useRef, useState, useEffect } from 'react';\n\nfunction useAudio(url) {\n  const audio = useRef(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.current.play() : audio.current.pause();\n  }, [playing]);\n\n  useEffect(() => {\n    const audioRef = audio.current;\n    audioRef.addEventListener('ended', () => setPlaying(false));\n\n    return () => {\n      audioRef.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle];\n}\n\nexport default useAudio;\n","import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import { useEffect, useState } from 'react';\n\nfunction usePrefersReducedMotion() {\n  const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n  const [reduceMotion, setReduceMotion] = useState(mediaQuery.matches);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n\n    const handleMediaChange = () => {\n      if (mediaQuery.matches) {\n        setReduceMotion(true);\n      }\n    };\n\n    mediaQuery.addListener(handleMediaChange);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaChange);\n    };\n  }, []);\n\n  return reduceMotion;\n}\n\nexport default usePrefersReducedMotion;\n","import io from 'socket.io-client';\n\nlet socket;\n\n/**\n * Connects to socket\n */\nexport const initiateSocket = () => {\n  socket = io('');\n};\n\n/**\n * Disconnects from socket\n */\nexport const disconnectSocket = () => {\n  if (!socket) return;\n  socket.disconnect();\n};\n\n/**\n * Subscribes the socket to an event\n */\nexport const subscribeToEvent = (event, callback, tries = 5) => {\n  if (!socket && tries > 0) return setTimeout(subscribeToEvent, 50, event, callback, tries - 1);\n  if (!socket) return;\n\n  socket.on(event, msg => {\n    return callback(msg);\n  });\n};\n\n/**\n * Transmits an event to subscribers\n */\nexport const sendEvent = (event, data, tries = 5) => {\n  if (!socket && tries > 0) return setTimeout(sendEvent, 50, event, data, tries - 1);\n  if (!socket) return;\n\n  socket.emit(event, data);\n};\n\n/**\n * Returns the current socket\n */\nexport const getSocket = () => {\n  return socket;\n};\n","/**\n * Returns true if being prerendered by react-snap. Useful for stuff\n * that needs to only run client-side and not during prerendering\n */\nconst prerender = navigator.userAgent === 'ReactSnap';\nexport default prerender;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst prerender = Boolean(navigator.userAgent === 'ReactSnap');\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      !prerender && console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\nserviceWorker.unregister();\n"],"sourceRoot":""}