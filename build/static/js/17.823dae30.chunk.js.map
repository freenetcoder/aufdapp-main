{"version":3,"sources":["pages/Staking/Main.js","pages/Staking/index.js"],"names":["Main","Component","render","id","className","window","web3","utils","fromWei","this","props","aufTokenBalance","stakingBalance","Button","secondary","type","onClick","event","preventDefault","approveTokens","onSubmit","amount","input","value","toBN","toWei","stakeTokens","ref","style","width","placeholder","required","unstakeTokens","App","loadWeb3","loadBlockchainData","accounts","eth","getAccounts","setState","account","networkId","net","getId","aufTokenData","AufToken","networks","aufToken","Contract","abi","address","methods","balanceOf","state","call","toString","alert","aufStakingData","AufStaking","aufStaking","loading","ethereum","Web3","enable","currentProvider","account_","approve","send","from","on","hash","constructor","super","location","reload","content","ethaddress1","toaddress1","substr","etheraddress1","name","fallback","Stars","Input2","pattern","disabled","to"],"mappings":"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","file":"static/js/17.823dae30.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport auficon from './auficon.png';\nimport './index.css';\n\nimport Button from 'components/Button';\n\n\nclass Main extends Component {\n  \n  render() {\n    \n    return (\n      <div id=\"content\">\n\n<label className=\"menu__item-label_\">Account balance: {window.web3.utils.fromWei(this.props.aufTokenBalance, 'Ether')} AMONG\n</label>\n\n<label className=\"menu__item-label_\">Staking balance: {window.web3.utils.fromWei(this.props.stakingBalance, 'Ether')} AMONG\n</label>\n\n<div className=\"menu__item-content\">\n                \n               \n            \n<div className=\"menu__item-content\">\n                <label className=\"menu__item-label__\">1. Approve $AMONG</label>\n                <div className=\"menu__item-divider\" />\n               \n             \n\n              <Button\n                  secondary\n                  type=\"submit\"\n                  className=\"menu__item-button__\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    this.props.approveTokens();\n                  }}\n                >\n                  approve\n                </Button>\n</div>     \n                \n              \n        \n</div>\n\n<div className=\"menu__item-content\">\n                <label className=\"menu__item-label__\">2. Stake tokens</label>\n                <div className=\"menu__item-divider\" />\n                <form className=\"menu__item-input\" onSubmit={(event) => {\n                event.preventDefault();\n                let amount;\n                amount = this.input.value;\n                amount = window.web3.utils.toBN(amount);\n                amount = window.web3.utils.toWei(amount, 'Ether');\n                this.props.stakeTokens(amount);\n              }}>\n                  <input type=\"text\"\n                  ref={(input) => { this.input = input; }}\n                  className=\"input_\"\n                  style={{ width: '245px' }}\n                  placeholder=\"0\"\n                  required />\n              \n              <Button\n           \n                  secondary\n                  type=\"submit\"\n                  className=\"menu__item-button_\"\n            \n                >\n                  stake\n                </Button>\n                 \n                \n                </form>\n        \n</div>\n\n\n\n\n\n\n<div className=\"menu__item-content\">\n                <label className=\"menu__item-label__\">3. Unstake all tokens</label>\n                <div className=\"menu__item-divider\" />\n               \n             \n\n              <Button\n                  secondary\n                  type=\"submit\"\n                  className=\"menu__item-button__\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    this.props.unstakeTokens();\n                  }}\n                >\n                  unstake\n                </Button>\n</div>\n        \n\n     \n\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component, Suspense } from 'react';\nimport Web3 from 'web3';\nimport AufToken from '../../abis/AufToken.json';\nimport AufStaking from '../../abis/AufStaking.json';\nimport Button from 'components/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport Input2 from 'components/Input2';\nimport Stars from 'components/Stars';\nimport Main from './Main';\nimport './index.css';\n\nclass App extends Component {\n\n \n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    const isApproved =  false;\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n\n    const networkId = await web3.eth.net.getId();\n\n    \n    // Load AufToken\n    const aufTokenData = AufToken.networks[networkId];\n    if(aufTokenData) {\n      const aufToken = new web3.eth.Contract(AufToken.abi, aufTokenData.address);\n      this.setState({ aufToken });\n      let aufTokenBalance = await aufToken.methods.balanceOf(this.state.account).call();\n      this.setState({ aufTokenBalance: aufTokenBalance.toString() });\n    } else {\n      window.alert('AufToken contract not deployed to detected network.');\n    }\n\n    // Load AufStaking\n    const aufStakingData = AufStaking.networks[networkId];\n    if(aufStakingData) {\n      const aufStaking = new web3.eth.Contract(AufStaking.abi, aufStakingData.address);\n      this.setState({ aufStaking });\n      let stakingBalance = await aufStaking.methods.stakingBalance(this.state.account).call();\n      this.setState({ stakingBalance: stakingBalance.toString() });\n    } else {\n      window.alert('AufStaking contract not deployed to detected network.');\n    }\n\n\n\n    this.setState({ loading: false });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n  \n\n  stakeTokens = (amount) => {\n    this.setState({ loading: true });\n      this.state.aufStaking.methods.stakeTokens(amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ loading: false });\n        window.location.reload(); \n   \n    });\n  }\n\n  async approveTokens() {\n   \n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    const account_ = accounts[0];\n    \n    const aufToken = new web3.eth.Contract(AufToken.abi, \"0xF841D292c1141cbF1460A1E2010916565a010cc8\");\n    await aufToken.methods.approve(\"0x4929000a05e5B404B8BF3BaA088bE5042E8Ff99e\", \"21000000000000000000000000\").send({ from: account_ }).on('transactionHash', (hash) => {\n\n    });\n   \n  }\n\n  unstakeTokens = () => {\n    this.setState({ loading: true });\n    this.state.aufStaking.methods.unstakeTokens().send({ from: this.state.account }).on('transactionHash', (hash) => {\n      this.setState({ loading: false });\n      window.location.reload(); \n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '0x0',\n      aufToken: {},\n      aufStaking: {},\n      aufTokenBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n  }\n\n  render() {\n    let content;\n    let ethaddress1 = this.state.account;\n    let toaddress1 = ethaddress1.substr(0, 6) + '...' + ethaddress1.substr(38, 4);\n    if(this.state.loading) {\n      content = <p id=\"loader\" className=\"text-center\">Loading...</p>;\n    } else {\n      \n      content = <Main\n        aufTokenBalance={this.state.aufTokenBalance}\n        stakingBalance={this.state.stakingBalance}\n        stakeTokens={this.stakeTokens}\n        approveTokens={this.approveTokens}\n        unstakeTokens={this.unstakeTokens}\n        etheraddress1={this.state.account}\n      />;\n    }\n\n    return (\n      <section className=\"menu\">\n      <Helmet>\n        <title>AmongUS Finance Staking</title>\n        <meta\n          name=\"description\"\n          content=\"Blockchain ready recreation of the popular -Among Us- indie game. Powered by Decentralized Finance, non-custodial staking and Farming protocols\"\n        />\n      </Helmet>\n  \n      <Suspense fallback={null}>\n          <Stars />\n        </Suspense>\n\n    {/* <p className=\"menu__version\">Balance: {this.state.aufTokenBalance / 1000000000000000000} AMONG </p> */}\n   \n        \n          <div className=\"menu__content\">\n          <Input2\n              className=\"menu__username3\"\n              placeholder={toaddress1}\n              pattern=\".{1,}\"\n              style={{ width: '500px' }}\n              disabled = {true}\n            \n            /> \n          {content}\n        \n       \n          </div>\n          <Link to=\"/menu\">\n          <Button\n            className=\"menu__nav-button\"\n            // onClick={backMenu}\n          >\n            back\n          </Button>\n          </Link>\n        \n    \n    \n    </section>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}